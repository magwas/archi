<project name="junit-tests" default="run" basedir=".">

    <description>
		Runs the automated JUnit tests.
    	Output is directed to an output directory where we generate html report files.
    	
    	This script assumes that all java classes have been previously compiled into
    	their "bin" output folders.
    	
    	If you are running this from Eclipse you need to create an "External Tools"
    	Run Configuration (menu "Run->External tools->External Tools...") that has the
    	junit.jar added to the classpath on the "Classpath" tab ("junit.jar" is found in the plugins
    	folder of your Eclipse installation.)
    	
    	You will need to add org.hamcrest.core_xxxxxx.jar to the Classpath.
    	
    	Make sure it's running in a "Separate JRE" ("JRE" tab)
    	
    	Note - you may need to change the directories to suit your own setup.
	</description>

    <!-- Set directory locations for this Ant script -->
	<!-- Users may need to set these locations to their own local settings -->
	
	<property name="eclipse.plugins" 		location="/build/mag/eclipse/plugins/"/>
	
    <property name="output.dir" 			location="archi-tests"/>
    <property name="temp.dir" 			    location="${output.dir}/temp"/>
	
	<property name="archi-editor.dir"		location="../uk.ac.bolton.archimate.editor"/>
	<property name="archi.editor-bin.dir"	location="${archi-editor.dir}/bin"/>
	
	<property name="archi-model.dir"		location="../uk.ac.bolton.archimate.model"/>
	<property name="archi.model-bin.dir"	location="${archi-model.dir}/bin"/>

	<property name="tests-src.dir"			location="src"/>
	<property name="tests-bin.dir"			location="bin"/>
	
    <!-- Run entry point -->
    <target name="run" depends="clean, init, junit_run, junit_report, clean-temp" />
	
    <!-- Clean the Main directory-->
    <target name="clean">
        <delete dir="${output.dir}" />
    </target>

	<!-- Clean the Temp directory-->
    <target name="clean-temp">
        <delete dir="${temp.dir}" />
    </target>

    <!-- Initialise -->
    <target name="init">
        <!-- Create a time stamp -->
        <tstamp>
            <format property="testDate" pattern="yyyy/MM/dd HH:mm:ss"/>
        </tstamp>

    	<!-- Create the output directories -->
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${temp.dir}"/>

    	<!-- Set up the classpaths needed to resolve libraries and java classes -->
        <path id="class.path">
            <pathelement path="${archi.editor-bin.dir}"/>
        	<pathelement path="${archi.model-bin.dir}"/>
            <pathelement path="${tests-bin.dir}"/>
            <pathelement path="/build/mag/eclipse/plugins/junit-4.10.jar"/>
            <pathelement path="/build/mag/eclipse/plugins/org.eclipse.net4j.util_2.0.0.v200906160348.jar"/>
            <pathelement path="/build/mag/eclipse/plugins/org.eclipse.core.runtime_3.7.0.v20110110.jar"/>
        	
        	
        	
        	
        	<fileset dir="${eclipse.plugins}">
        		<include name="org.eclipse.emf*.jar" />
            </fileset>
        	
        	<!-- 	<fileset dir="${archi.dir}/lib"> -->
        	<!-- 	    <include name="*.jar" /> -->
            <!-- 	</fileset> -->
        </path>
    </target>

    <!-- Run the JUnit Tests -->
    <target name="junit_run">
        <junit printsummary="yes">
            <classpath refid="class.path"/>

            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>

            <batchtest todir="${temp.dir}">
                <fileset dir="${tests-src.dir}">
                    <!-- Don't run abstract tests, only real ones -->
                    <exclude name="**/*AbstractTest.java"/>
                    <include name="**/*Test.java"/>
                	<include name="**/*Tests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Generate the HTML Reports -->
    <target name="junit_report">
        <junitreport todir="${output.dir}">
            <fileset dir="${temp.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${output.dir}"/>
        </junitreport>
    </target>
</project>